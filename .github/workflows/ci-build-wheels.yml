name: ci-build-wheels

on:
  workflow_dispatch:
    
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  UV_RESOLUTION_STRATEGY: highest

jobs:
  build-test-package:
    name: build-test-package
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v5

      - name: Run Rust tests
        run: cargo test --release --verbose

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Set up uv with efficient cache
        id: setup-uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: |
            **/pyproject.toml
            **/uv.lock
            **/*.py.lock
          cache-suffix: os=${{ runner.os }}-py=3.12-res=${{ env.UV_RESOLUTION_STRATEGY }}

      - name: Build and install Python package
        run: uv pip install . --system

      - name: Run Python unittests
        run: python -m unittest discover -s tests/python -v

      - name: Build wheels (maturin)
        uses: PyO3/maturin-action@v1
        with:
          command: build
          manylinux: "2_28"
          target: ${{ runner.os == 'macOS' && 'universal2-apple-darwin' || '' }}
          args: >-
            --release
            -i python3.12

      - name: Build sdist (maturin)
        uses: PyO3/maturin-action@v1
        with:
          command: sdist

      - name: Upload Python package artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-package-${{ matrix.os }}-${{ github.sha }}
          path: |
            target/wheels/*

  build-test-package-success:
    name: build-test-package-success
    needs: [build-test-package]
    runs-on: ubuntu-latest
    steps:
      - name: Check status
        run: |
          echo "Build and test job completed successfully."
          if [ "${{ job.status }}" == "success" ]; then
            echo "The build-test-package job succeeded."
          else
            echo "The build-test-package job did not succeed."
            exit 1
          fi

  build-test-package-success-on-push:
    name: build-test-package-success-on-push
    if: github.event_name == 'push'
    needs: [build-test-package]
    runs-on: ubuntu-latest
    steps:
      - name: Check status
        run: |
          echo "Build and test job completed successfully."
          if [ "${{ job.status }}" == "success" ]; then
            echo "The build-test-package job succeeded."
          else
            echo "The build-test-package job did not succeed."
            exit 1
          fi
      - name: Download Python package artifacts
        uses: actions/download-artifact@v4
        with:
          name: python-package-ubuntu-latest-${{ github.sha }}
