name: ci-tests-main

on:
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always
  UV_RESOLUTION_STRATEGY: highest

jobs:
  unittest-main:
    name: unittest-main
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v5


      - name: Run Rust tests
        run: cargo test --release --verbose

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up uv with efficient cache
        id: setup-uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: |
            **/pyproject.toml
            **/uv.lock
            **/*.py.lock
          cache-suffix: os=${{ runner.os }}-py=${{ matrix.python-version }}-res=${{ env.UV_RESOLUTION_STRATEGY }}


      - name: Build and install Python package
        run: uv pip install .

      - name: Run Python unittests
        run: uv run python -m unittest discover -s tests/python -v

  unittest-main-success:
    name: unittest-main-success
    needs: [unittest-main]
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    steps:
      - name: Check status
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "All tests passed"
          else
            echo "Some tests failed"
            exit 1
          fi

  package-main-artifact:
    name: package-main-artifact
    needs: [unittest-main]
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Set up Python 3.12
        uses: actions/setup-python@v6
        with:
          python-version: "3.12"

      - name: Set up uv with efficient cache
        id: setup-uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: |
            **/pyproject.toml
            **/uv.lock
            **/*.py.lock
          cache-suffix: os=${{ runner.os }}-py=3.12-res=${{ env.UV_RESOLUTION_STRATEGY }}


      - name: Build wheels
        run: uvx --from maturin maturin build --release

      - name: Build sdist
        run: uvx --from maturin maturin sdist

      - name: Upload Python package to GitHub artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-package-${{ github.sha }}
          path: |
            target/wheels/*
